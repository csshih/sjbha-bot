// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Pervasives = require("rescript/lib/js/pervasives.js");
var Interaction = require("../discord/Interaction.bs.js");
var SlashCommand = require("../discord/SlashCommand.bs.js");
var Meetup_Create = require("./Meetup_Create.bs.js");

var config_type = SlashCommand.CommandType.slash;

var config_options = [{
    type: SlashCommand.OptionType.sub_command,
    name: "create",
    description: "Create a new meetup"
  }];

var config = {
  name: "meetup",
  description: "Create get togethers",
  type: config_type,
  options: config_options
};

function make(param, interaction, next) {
  var cmd = Interaction.details(interaction);
  if (typeof cmd === "number") {
    return Curry._1(next, undefined);
  }
  switch (cmd.TAG | 0) {
    case /* ChatInput */0 :
        var cmd$1 = cmd._0;
        if (cmd$1.commandName !== "meetup") {
          return Curry._1(next, undefined);
        }
        var match = cmd$1.options.getSubcommand();
        if (match !== "create") {
          return Pervasives.failwith("unrecognized subcommand");
        }
        Meetup_Create.initializeNewMeetup(cmd$1);
        return ;
    case /* Button */1 :
        var btn = cmd._0;
        if (btn.customId !== "meetup/create/edit-details") {
          return Curry._1(next, undefined);
        }
        Meetup_Create.onClickEditDetails(btn);
        return ;
    case /* ModalSubmit */2 :
        var modal = cmd._0;
        if (modal.customId !== "meetup/create/details") {
          return Curry._1(next, undefined);
        }
        Meetup_Create.onSubmitModalDetails(modal);
        return ;
    
  }
}

exports.config = config;
exports.make = make;
/* Meetup_Create Not a pure module */
