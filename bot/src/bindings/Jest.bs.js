// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


expect.extend({
      toBeSome: (function (got) {
          return {
                  pass: got !== undefined,
                  message: (function (param) {
                      return "Expected option to be Some but instead got None";
                    })
                };
        }),
      toBeNone: (function (got) {
          return {
                  pass: got === undefined,
                  message: (function (param) {
                      var val = got !== undefined ? got : "";
                      return "Expected option to be None but instead got Some(" + val + ")";
                    })
                };
        }),
      toBeError: (function (got, param) {
          var tmp;
          tmp = got.TAG === /* Ok */0 ? false : true;
          return {
                  pass: tmp,
                  message: (function (param) {
                      var val;
                      if (got.TAG === /* Ok */0) {
                        var x = JSON.stringify(got._0);
                        val = x !== undefined ? x : "";
                      } else {
                        val = "";
                      }
                      return "Expected result to be Error but instead got Ok(" + val + ")";
                    })
                };
        })
    });

function expect$1(prim) {
  return expect(prim);
}

exports.expect = expect$1;
/*  Not a pure module */
