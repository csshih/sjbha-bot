// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


var User = {};

var Message = {};

function kind(t) {
  var match = t.type;
  switch (match) {
    case "DM" :
        return /* Dm */1;
    case "GUILD_PRIVATE_THREAD" :
        return /* Thread */{
                _0: false
              };
    case "GUILD_PUBLIC_THREAD" :
        return /* Thread */{
                _0: true
              };
    case "GUILD_TEXT" :
        return /* Text */0;
    default:
      return /* Unknown */2;
  }
}

function isServerText(t) {
  var match = kind(t);
  if (typeof match === "number") {
    return match === 0;
  } else {
    return true;
  }
}

var Channel = {
  kind: kind,
  isServerText: isServerText
};

function footer(text) {
  return {
          text: text
        };
}

function field(name, value, box) {
  return {
          name: name,
          value: value,
          inline: box === /* Inline */0
        };
}

var Embed = {
  footer: footer,
  field: field
};

var $$Response = {};

function getStringOption(t, option) {
  return t.options.getString(option);
}

function respond(t, response) {
  var tmp;
  switch (response.TAG | 0) {
    case /* Embed */1 :
        tmp = undefined;
        break;
    case /* Text */0 :
    case /* Error */2 :
        tmp = response._0;
        break;
    
  }
  var tmp$1;
  switch (response.TAG | 0) {
    case /* Embed */1 :
        tmp$1 = [response._0];
        break;
    case /* Text */0 :
    case /* Error */2 :
        tmp$1 = [];
        break;
    
  }
  var tmp$2;
  switch (response.TAG | 0) {
    case /* Text */0 :
    case /* Embed */1 :
        tmp$2 = response._1 === /* Public */0;
        break;
    case /* Error */2 :
        tmp$2 = true;
        break;
    
  }
  var message = {
    content: tmp,
    embeds: tmp$1,
    ephemeral: tmp$2
  };
  t.reply(message);
  
}

function error(t, exn) {
  console.error("Error happened when attempting to resolve", exn);
  return respond(t, {
              TAG: /* Text */0,
              _0: "Something unexpected happened",
              _1: /* Private */1
            });
}

var Interaction = {
  getStringOption: getStringOption,
  respond: respond,
  error: error
};

var StringOption = {};

var SubCommandBuilder = {};

var SlashCommandBuilder = {};

exports.User = User;
exports.Message = Message;
exports.Channel = Channel;
exports.Embed = Embed;
exports.$$Response = $$Response;
exports.Interaction = Interaction;
exports.StringOption = StringOption;
exports.SubCommandBuilder = SubCommandBuilder;
exports.SlashCommandBuilder = SlashCommandBuilder;
/* No side effect */
